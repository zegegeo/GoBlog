// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: article.proto

package server

import (
	"context"

	"GoBlog/service/article/article"
	"GoBlog/service/article/internal/logic"
	"GoBlog/service/article/internal/svc"
)

type ArticleServer struct {
	svcCtx *svc.ServiceContext
	article.UnimplementedArticleServer
}

func NewArticleServer(svcCtx *svc.ServiceContext) *ArticleServer {
	return &ArticleServer{
		svcCtx: svcCtx,
	}
}

// 创建文章
func (s *ArticleServer) CreateArticle(ctx context.Context, in *article.CreateArticleRequest) (*article.CreateArticleResponse, error) {
	l := logic.NewCreateArticleLogic(ctx, s.svcCtx)
	return l.CreateArticle(in)
}

// 获取文章列表
func (s *ArticleServer) GetArticleList(ctx context.Context, in *article.GetArticleListRequest) (*article.GetArticleListResponse, error) {
	l := logic.NewGetArticleListLogic(ctx, s.svcCtx)
	return l.GetArticleList(in)
}

// 获取文章详情
func (s *ArticleServer) GetArticle(ctx context.Context, in *article.GetArticleRequest) (*article.GetArticleResponse, error) {
	l := logic.NewGetArticleLogic(ctx, s.svcCtx)
	return l.GetArticle(in)
}

// 更新文章
func (s *ArticleServer) UpdateArticle(ctx context.Context, in *article.UpdateArticleRequest) (*article.UpdateArticleResponse, error) {
	l := logic.NewUpdateArticleLogic(ctx, s.svcCtx)
	return l.UpdateArticle(in)
}

// 删除文章
func (s *ArticleServer) DeleteArticle(ctx context.Context, in *article.DeleteArticleRequest) (*article.DeleteArticleResponse, error) {
	l := logic.NewDeleteArticleLogic(ctx, s.svcCtx)
	return l.DeleteArticle(in)
}
